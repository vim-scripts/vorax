
# line 1 "lib/vorax/parser/grammars/subprog.rl"

# line 63 "lib/vorax/parser/grammars/subprog.rl"


module Vorax

	module Parser

		class SubprogItem < DeclareItem

			def self.describe(data)
				@args = []
				@name, @kind, @return_type, @declare_start_pos = nil
				if data
				  data << ' '
					eof = data.length
					
# line 21 "lib/vorax/parser/grammars/subprog.rb"
class << self
	attr_accessor :_subprog_actions
	private :_subprog_actions, :_subprog_actions=
end
self._subprog_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 7, 1, 8, 1, 9, 1, 
	10, 1, 11, 1, 12, 1, 13, 1, 
	14, 1, 15, 1, 16, 2, 4, 10, 
	2, 5, 10, 2, 6, 10, 2, 10, 
	0
]

class << self
	attr_accessor :_subprog_key_offsets
	private :_subprog_key_offsets, :_subprog_key_offsets=
end
self._subprog_key_offsets = [
	0, 0, 14, 16, 18, 20, 22, 24, 
	26, 28, 30, 32, 34, 39, 48, 49, 
	50, 51, 52, 54, 56, 58, 60, 62, 
	64, 66, 68, 73, 86, 87, 94, 102, 
	115, 116, 121, 142, 143, 152, 162, 167, 
	174, 175, 176, 177, 178, 180, 182, 184, 
	186, 188, 190, 195, 210, 211, 219, 223, 
	225, 227, 229, 231, 233, 235, 241, 242, 
	243, 244, 245, 247, 255, 256, 264, 272, 
	273, 280, 296, 313, 330, 331, 332, 333, 
	334, 336, 355, 374, 393, 410, 417, 418, 
	419, 420, 421, 423, 425, 430, 437, 438, 
	439, 440, 441, 443, 445, 447, 449, 451, 
	453, 454, 455, 456, 457, 459, 460, 461, 
	462, 463, 465, 466, 473, 480, 481, 482, 
	483, 484, 486, 488, 490, 492, 494, 496, 
	498, 502, 504, 506, 508, 510, 512, 514, 
	521, 529, 530, 539, 547, 548, 556, 573, 
	591, 609, 610, 611, 612, 613, 615, 635, 
	653, 677, 678, 679, 680, 681, 683, 703, 
	723, 743, 763, 783, 803, 821, 841, 861, 
	881, 901, 921, 939, 959, 960, 961, 962, 
	963, 965, 985, 1005, 1025, 1043, 1055, 1056, 
	1057, 1058, 1059, 1061, 1063, 1068, 1075, 1076, 
	1077, 1078, 1079, 1081, 1083, 1085, 1087, 1089, 
	1091, 1111, 1131, 1149, 1171, 1172, 1173, 1174, 
	1175, 1177, 1197, 1217, 1235, 1249, 1250, 1251, 
	1252, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 
	1269, 1270, 1277, 1285, 1286, 1292, 1307, 1323, 
	1339, 1340, 1341, 1342, 1343, 1345, 1347, 1349, 
	1351, 1353, 1355, 1357, 1359, 1361, 1366, 1379, 
	1380, 1388, 1394, 1407, 1408, 1413, 1434, 1435, 
	1444, 1454, 1460, 1461, 1462, 1463, 1464, 1466, 
	1467, 1474, 1481, 1482, 1483, 1484, 1485, 1487, 
	1489, 1491, 1493, 1495, 1497, 1499, 1503, 1505, 
	1507, 1509, 1511, 1513, 1515, 1522, 1530, 1531, 
	1540, 1548, 1549, 1557, 1574, 1592, 1610, 1611, 
	1612, 1613, 1614, 1616, 1636, 1654, 1678, 1679, 
	1680, 1681, 1682, 1684, 1704, 1724, 1744, 1764, 
	1784, 1804, 1822, 1842, 1862, 1882, 1902, 1922, 
	1940, 1960, 1961, 1962, 1963, 1964, 1966, 1986, 
	2006, 2026, 2044, 2056, 2057, 2058, 2059, 2060, 
	2062, 2064, 2069, 2076, 2077, 2078, 2079, 2080, 
	2082, 2084, 2086, 2088, 2090, 2092, 2112, 2132, 
	2150, 2172, 2173, 2174, 2175, 2176, 2178, 2198, 
	2218, 2236, 2250, 2251, 2252, 2253, 2254, 2256, 
	2257, 2258, 2259, 2260, 2262, 2263, 2264, 2272, 
	2273, 2281, 2289, 2290, 2297, 2298, 2299, 2301, 
	2317, 2334, 2351, 2352, 2353, 2354, 2355, 2357, 
	2361, 2363, 2365, 2367, 2372, 2385, 2386, 2387, 
	2388, 2389, 2391, 2393, 2395, 2397, 2399, 2401, 
	2403, 2405, 2407, 2409, 2411, 2413, 2418, 2429, 
	2430, 2431, 2432, 2433, 2435, 2439, 2441, 2446, 
	2463, 2464, 2465, 2466, 2467, 2469, 2471, 2473, 
	2475, 2477, 2479, 2484, 2497, 2498, 2499, 2500, 
	2501, 2503, 2505, 2507, 2509, 2511, 2513, 2517, 
	2519, 2521, 2523, 2525, 2527, 2529, 2531, 2533, 
	2535, 2537, 2539, 2544, 2563, 2564, 2565, 2566, 
	2567, 2569, 2571, 2571, 2578
]

class << self
	attr_accessor :_subprog_trans_keys
	private :_subprog_trans_keys, :_subprog_trans_keys=
end
self._subprog_trans_keys = [
	67, 70, 73, 77, 79, 80, 83, 99, 
	102, 105, 109, 111, 112, 115, 79, 111, 
	78, 110, 83, 115, 84, 116, 82, 114, 
	85, 117, 67, 99, 84, 116, 79, 111, 
	82, 114, 32, 45, 47, 9, 13, 32, 
	45, 47, 70, 80, 102, 112, 9, 13, 
	45, 10, 42, 42, 42, 47, 85, 117, 
	78, 110, 67, 99, 84, 116, 73, 105, 
	79, 111, 78, 110, 32, 45, 47, 9, 
	13, 32, 34, 45, 47, 95, 9, 13, 
	35, 36, 65, 90, 97, 122, 34, 32, 
	40, 45, 46, 47, 9, 13, 32, 40, 
	45, 47, 82, 114, 9, 13, 32, 34, 
	45, 47, 95, 9, 13, 35, 36, 65, 
	90, 97, 122, 34, 32, 45, 47, 9, 
	13, 32, 34, 45, 47, 73, 78, 79, 
	83, 95, 105, 110, 111, 115, 9, 13, 
	35, 36, 65, 90, 97, 122, 34, 32, 
	37, 41, 44, 45, 46, 47, 9, 13, 
	32, 41, 44, 45, 47, 58, 68, 100, 
	9, 13, 32, 45, 47, 9, 13, 32, 
	45, 47, 82, 114, 9, 13, 45, 10, 
	42, 42, 42, 47, 69, 101, 84, 116, 
	85, 117, 82, 114, 78, 110, 32, 45, 
	47, 9, 13, 32, 34, 45, 47, 83, 
	95, 115, 9, 13, 35, 36, 65, 90, 
	97, 122, 34, 32, 37, 45, 46, 47, 
	59, 9, 13, 82, 84, 114, 116, 79, 
	111, 87, 119, 84, 116, 89, 121, 80, 
	112, 69, 101, 32, 45, 47, 59, 9, 
	13, 45, 10, 42, 42, 42, 47, 34, 
	95, 35, 36, 65, 90, 97, 122, 34, 
	32, 37, 45, 46, 47, 59, 9, 13, 
	34, 95, 35, 36, 65, 90, 97, 122, 
	34, 32, 37, 45, 47, 59, 9, 13, 
	32, 37, 45, 47, 59, 95, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 37, 45, 46, 47, 59, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 45, 46, 47, 59, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 45, 10, 42, 42, 42, 47, 
	32, 37, 45, 46, 47, 59, 69, 95, 
	101, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 45, 46, 47, 
	59, 76, 95, 108, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	45, 46, 47, 59, 70, 95, 102, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 45, 46, 47, 59, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 45, 47, 65, 97, 9, 
	13, 45, 10, 42, 42, 42, 47, 83, 
	115, 32, 45, 47, 9, 13, 32, 45, 
	47, 82, 114, 9, 13, 45, 10, 42, 
	42, 42, 47, 69, 101, 83, 115, 85, 
	117, 76, 108, 84, 116, 45, 10, 42, 
	42, 42, 47, 45, 10, 42, 42, 42, 
	47, 61, 32, 41, 44, 45, 47, 9, 
	13, 32, 41, 44, 45, 47, 9, 13, 
	45, 10, 42, 42, 42, 47, 69, 101, 
	70, 102, 65, 97, 85, 117, 76, 108, 
	84, 116, 82, 84, 114, 116, 79, 111, 
	87, 119, 84, 116, 89, 121, 80, 112, 
	69, 101, 32, 41, 44, 45, 47, 9, 
	13, 34, 95, 35, 36, 65, 90, 97, 
	122, 34, 32, 37, 41, 44, 45, 46, 
	47, 9, 13, 34, 95, 35, 36, 65, 
	90, 97, 122, 34, 32, 37, 41, 44, 
	45, 47, 9, 13, 32, 37, 41, 44, 
	45, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 95, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	37, 41, 44, 45, 46, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 45, 10, 42, 42, 42, 47, 32, 
	37, 41, 44, 45, 46, 47, 78, 95, 
	110, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 41, 44, 45, 
	46, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 34, 41, 
	44, 45, 47, 58, 68, 78, 79, 83, 
	95, 100, 110, 111, 115, 9, 13, 35, 
	36, 65, 90, 97, 122, 45, 10, 42, 
	42, 42, 47, 32, 37, 41, 44, 45, 
	46, 47, 69, 95, 101, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	37, 41, 44, 45, 46, 47, 70, 95, 
	102, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 41, 44, 45, 
	46, 47, 65, 95, 97, 9, 13, 35, 
	36, 48, 57, 66, 90, 98, 122, 32, 
	37, 41, 44, 45, 46, 47, 85, 95, 
	117, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 41, 44, 45, 
	46, 47, 76, 95, 108, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	37, 41, 44, 45, 46, 47, 84, 95, 
	116, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 41, 44, 45, 
	46, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 79, 95, 111, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	67, 95, 99, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 79, 95, 111, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	80, 95, 112, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 89, 95, 121, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 34, 41, 44, 45, 
	47, 58, 68, 83, 95, 100, 115, 9, 
	13, 35, 36, 65, 90, 97, 122, 45, 
	10, 42, 42, 42, 47, 32, 37, 41, 
	44, 45, 46, 47, 69, 95, 101, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	76, 95, 108, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 70, 95, 102, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 41, 44, 45, 47, 
	58, 65, 68, 97, 100, 9, 13, 45, 
	10, 42, 42, 42, 47, 83, 115, 32, 
	45, 47, 9, 13, 32, 45, 47, 82, 
	114, 9, 13, 45, 10, 42, 42, 42, 
	47, 69, 101, 83, 115, 85, 117, 76, 
	108, 84, 116, 32, 37, 41, 44, 45, 
	46, 47, 85, 95, 117, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	37, 41, 44, 45, 46, 47, 84, 95, 
	116, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 37, 41, 44, 45, 
	46, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 34, 41, 
	44, 45, 47, 58, 68, 78, 83, 95, 
	100, 110, 115, 9, 13, 35, 36, 65, 
	90, 97, 122, 45, 10, 42, 42, 42, 
	47, 32, 37, 41, 44, 45, 46, 47, 
	85, 95, 117, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 37, 41, 
	44, 45, 46, 47, 84, 95, 116, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 37, 41, 44, 45, 46, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 45, 10, 42, 42, 42, 47, 45, 
	10, 42, 42, 42, 47, 34, 95, 35, 
	36, 65, 90, 97, 122, 34, 32, 40, 
	45, 46, 47, 9, 13, 34, 95, 35, 
	36, 65, 90, 97, 122, 34, 32, 40, 
	45, 47, 9, 13, 32, 40, 45, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 40, 45, 46, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 40, 45, 46, 47, 
	95, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 45, 10, 42, 42, 42, 
	47, 82, 114, 79, 111, 67, 99, 69, 
	101, 68, 100, 85, 117, 82, 114, 69, 
	101, 32, 45, 47, 9, 13, 32, 34, 
	45, 47, 95, 9, 13, 35, 36, 65, 
	90, 97, 122, 34, 32, 40, 45, 46, 
	47, 59, 9, 13, 32, 40, 45, 47, 
	9, 13, 32, 34, 45, 47, 95, 9, 
	13, 35, 36, 65, 90, 97, 122, 34, 
	32, 45, 47, 9, 13, 32, 34, 45, 
	47, 73, 78, 79, 83, 95, 105, 110, 
	111, 115, 9, 13, 35, 36, 65, 90, 
	97, 122, 34, 32, 37, 41, 44, 45, 
	46, 47, 9, 13, 32, 41, 44, 45, 
	47, 58, 68, 100, 9, 13, 32, 45, 
	47, 59, 9, 13, 45, 10, 42, 42, 
	42, 47, 61, 32, 41, 44, 45, 47, 
	9, 13, 32, 41, 44, 45, 47, 9, 
	13, 45, 10, 42, 42, 42, 47, 69, 
	101, 70, 102, 65, 97, 85, 117, 76, 
	108, 84, 116, 82, 84, 114, 116, 79, 
	111, 87, 119, 84, 116, 89, 121, 80, 
	112, 69, 101, 32, 41, 44, 45, 47, 
	9, 13, 34, 95, 35, 36, 65, 90, 
	97, 122, 34, 32, 37, 41, 44, 45, 
	46, 47, 9, 13, 34, 95, 35, 36, 
	65, 90, 97, 122, 34, 32, 37, 41, 
	44, 45, 47, 9, 13, 32, 37, 41, 
	44, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 95, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 37, 41, 44, 45, 46, 47, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 45, 10, 42, 42, 42, 47, 
	32, 37, 41, 44, 45, 46, 47, 78, 
	95, 110, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 37, 41, 44, 
	45, 46, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 34, 
	41, 44, 45, 47, 58, 68, 78, 79, 
	83, 95, 100, 110, 111, 115, 9, 13, 
	35, 36, 65, 90, 97, 122, 45, 10, 
	42, 42, 42, 47, 32, 37, 41, 44, 
	45, 46, 47, 69, 95, 101, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 37, 41, 44, 45, 46, 47, 70, 
	95, 102, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 37, 41, 44, 
	45, 46, 47, 65, 95, 97, 9, 13, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	32, 37, 41, 44, 45, 46, 47, 85, 
	95, 117, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 37, 41, 44, 
	45, 46, 47, 76, 95, 108, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 37, 41, 44, 45, 46, 47, 84, 
	95, 116, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 37, 41, 44, 
	45, 46, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 79, 95, 111, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 67, 95, 99, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 79, 95, 111, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 80, 95, 112, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 89, 95, 121, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 95, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 34, 41, 44, 
	45, 47, 58, 68, 83, 95, 100, 115, 
	9, 13, 35, 36, 65, 90, 97, 122, 
	45, 10, 42, 42, 42, 47, 32, 37, 
	41, 44, 45, 46, 47, 69, 95, 101, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 76, 95, 108, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 70, 95, 102, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 95, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 41, 44, 45, 
	47, 58, 65, 68, 97, 100, 9, 13, 
	45, 10, 42, 42, 42, 47, 83, 115, 
	32, 45, 47, 9, 13, 32, 45, 47, 
	82, 114, 9, 13, 45, 10, 42, 42, 
	42, 47, 69, 101, 83, 115, 85, 117, 
	76, 108, 84, 116, 32, 37, 41, 44, 
	45, 46, 47, 85, 95, 117, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 37, 41, 44, 45, 46, 47, 84, 
	95, 116, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 37, 41, 44, 
	45, 46, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 34, 
	41, 44, 45, 47, 58, 68, 78, 83, 
	95, 100, 110, 115, 9, 13, 35, 36, 
	65, 90, 97, 122, 45, 10, 42, 42, 
	42, 47, 32, 37, 41, 44, 45, 46, 
	47, 85, 95, 117, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 37, 
	41, 44, 45, 46, 47, 84, 95, 116, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 41, 44, 45, 46, 
	47, 95, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 45, 10, 42, 42, 42, 47, 
	45, 10, 42, 42, 42, 47, 45, 10, 
	34, 95, 35, 36, 65, 90, 97, 122, 
	34, 32, 40, 45, 46, 47, 59, 9, 
	13, 34, 95, 35, 36, 65, 90, 97, 
	122, 34, 32, 40, 45, 47, 59, 9, 
	13, 42, 42, 42, 47, 32, 40, 45, 
	47, 59, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 40, 45, 
	46, 47, 59, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 40, 
	45, 46, 47, 59, 95, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 45, 
	10, 42, 42, 42, 47, 73, 85, 105, 
	117, 78, 110, 65, 97, 76, 108, 32, 
	45, 47, 9, 13, 32, 45, 47, 67, 
	70, 73, 80, 99, 102, 105, 112, 9, 
	13, 45, 10, 42, 42, 42, 47, 78, 
	110, 83, 115, 84, 116, 65, 97, 78, 
	110, 84, 116, 73, 105, 65, 97, 66, 
	98, 76, 108, 69, 101, 32, 45, 47, 
	9, 13, 32, 45, 47, 67, 70, 80, 
	99, 102, 112, 9, 13, 45, 10, 42, 
	42, 42, 47, 65, 69, 97, 101, 80, 
	112, 32, 45, 47, 9, 13, 32, 45, 
	47, 67, 70, 73, 77, 80, 83, 99, 
	102, 105, 109, 112, 115, 9, 13, 45, 
	10, 42, 42, 42, 47, 69, 101, 77, 
	109, 66, 98, 69, 101, 82, 114, 32, 
	45, 47, 9, 13, 32, 45, 47, 67, 
	70, 73, 80, 99, 102, 105, 112, 9, 
	13, 45, 10, 42, 42, 42, 47, 84, 
	116, 65, 97, 84, 116, 73, 105, 67, 
	99, 82, 86, 114, 118, 68, 100, 69, 
	101, 82, 114, 69, 101, 82, 114, 82, 
	114, 73, 105, 68, 100, 73, 105, 78, 
	110, 71, 103, 32, 45, 47, 9, 13, 
	32, 45, 47, 67, 70, 73, 77, 79, 
	80, 83, 99, 102, 105, 109, 111, 112, 
	115, 9, 13, 45, 10, 42, 42, 42, 
	47, 82, 114, 32, 45, 47, 65, 97, 
	9, 13, 32, 40, 45, 47, 9, 13, 
	0
]

class << self
	attr_accessor :_subprog_single_lengths
	private :_subprog_single_lengths, :_subprog_single_lengths=
end
self._subprog_single_lengths = [
	0, 14, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 3, 7, 1, 1, 
	1, 1, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 5, 1, 5, 6, 5, 
	1, 3, 13, 1, 7, 8, 3, 5, 
	1, 1, 1, 1, 2, 2, 2, 2, 
	2, 2, 3, 7, 1, 6, 4, 2, 
	2, 2, 2, 2, 2, 4, 1, 1, 
	1, 1, 2, 2, 1, 6, 2, 1, 
	5, 6, 7, 7, 1, 1, 1, 1, 
	2, 9, 9, 9, 7, 5, 1, 1, 
	1, 1, 2, 2, 3, 5, 1, 1, 
	1, 1, 2, 2, 2, 2, 2, 2, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	1, 2, 1, 5, 5, 1, 1, 1, 
	1, 2, 2, 2, 2, 2, 2, 2, 
	4, 2, 2, 2, 2, 2, 2, 5, 
	2, 1, 7, 2, 1, 6, 7, 8, 
	8, 1, 1, 1, 1, 2, 10, 8, 
	16, 1, 1, 1, 1, 2, 10, 10, 
	10, 10, 10, 10, 8, 10, 10, 10, 
	10, 10, 8, 12, 1, 1, 1, 1, 
	2, 10, 10, 10, 8, 10, 1, 1, 
	1, 1, 2, 2, 3, 5, 1, 1, 
	1, 1, 2, 2, 2, 2, 2, 2, 
	10, 10, 8, 14, 1, 1, 1, 1, 
	2, 10, 10, 8, 4, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 2, 2, 
	1, 5, 2, 1, 4, 5, 6, 6, 
	1, 1, 1, 1, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 5, 1, 
	6, 4, 5, 1, 3, 13, 1, 7, 
	8, 4, 1, 1, 1, 1, 2, 1, 
	5, 5, 1, 1, 1, 1, 2, 2, 
	2, 2, 2, 2, 2, 4, 2, 2, 
	2, 2, 2, 2, 5, 2, 1, 7, 
	2, 1, 6, 7, 8, 8, 1, 1, 
	1, 1, 2, 10, 8, 16, 1, 1, 
	1, 1, 2, 10, 10, 10, 10, 10, 
	10, 8, 10, 10, 10, 10, 10, 8, 
	12, 1, 1, 1, 1, 2, 10, 10, 
	10, 8, 10, 1, 1, 1, 1, 2, 
	2, 3, 5, 1, 1, 1, 1, 2, 
	2, 2, 2, 2, 2, 10, 10, 8, 
	14, 1, 1, 1, 1, 2, 10, 10, 
	8, 4, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 2, 1, 1, 2, 1, 
	6, 2, 1, 5, 1, 1, 2, 6, 
	7, 7, 1, 1, 1, 1, 2, 4, 
	2, 2, 2, 3, 11, 1, 1, 1, 
	1, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 9, 1, 
	1, 1, 1, 2, 4, 2, 3, 15, 
	1, 1, 1, 1, 2, 2, 2, 2, 
	2, 2, 3, 11, 1, 1, 1, 1, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 17, 1, 1, 1, 1, 
	2, 2, 0, 5, 4
]

class << self
	attr_accessor :_subprog_range_lengths
	private :_subprog_range_lengths, :_subprog_range_lengths=
end
self._subprog_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 4, 0, 1, 1, 4, 
	0, 1, 4, 0, 1, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 4, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 3, 0, 1, 3, 0, 
	1, 5, 5, 5, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 1, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	3, 0, 1, 3, 0, 1, 5, 5, 
	5, 0, 0, 0, 0, 0, 5, 5, 
	4, 0, 0, 0, 0, 0, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 4, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 1, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	5, 5, 5, 4, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 3, 
	0, 1, 3, 0, 1, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 4, 0, 
	1, 1, 4, 0, 1, 4, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 3, 0, 1, 
	3, 0, 1, 5, 5, 5, 0, 0, 
	0, 0, 0, 5, 5, 4, 0, 0, 
	0, 0, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	4, 0, 0, 0, 0, 0, 5, 5, 
	5, 5, 1, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 5, 5, 
	4, 0, 0, 0, 0, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	1, 3, 0, 1, 0, 0, 0, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 1, 1
]

class << self
	attr_accessor :_subprog_index_offsets
	private :_subprog_index_offsets, :_subprog_index_offsets=
end
self._subprog_index_offsets = [
	0, 0, 15, 18, 21, 24, 27, 30, 
	33, 36, 39, 42, 45, 50, 59, 61, 
	63, 65, 67, 70, 73, 76, 79, 82, 
	85, 88, 91, 96, 106, 108, 115, 123, 
	133, 135, 140, 158, 160, 169, 179, 184, 
	191, 193, 195, 197, 199, 202, 205, 208, 
	211, 214, 217, 222, 234, 236, 244, 249, 
	252, 255, 258, 261, 264, 267, 273, 275, 
	277, 279, 281, 284, 290, 292, 300, 306, 
	308, 315, 327, 340, 353, 355, 357, 359, 
	361, 364, 379, 394, 409, 422, 429, 431, 
	433, 435, 437, 440, 443, 448, 455, 457, 
	459, 461, 463, 466, 469, 472, 475, 478, 
	481, 483, 485, 487, 489, 492, 494, 496, 
	498, 500, 503, 505, 512, 519, 521, 523, 
	525, 527, 530, 533, 536, 539, 542, 545, 
	548, 553, 556, 559, 562, 565, 568, 571, 
	578, 584, 586, 595, 601, 603, 611, 624, 
	638, 652, 654, 656, 658, 660, 663, 679, 
	693, 714, 716, 718, 720, 722, 725, 741, 
	757, 773, 789, 805, 821, 835, 851, 867, 
	883, 899, 915, 929, 946, 948, 950, 952, 
	954, 957, 973, 989, 1005, 1019, 1031, 1033, 
	1035, 1037, 1039, 1042, 1045, 1050, 1057, 1059, 
	1061, 1063, 1065, 1068, 1071, 1074, 1077, 1080, 
	1083, 1099, 1115, 1129, 1148, 1150, 1152, 1154, 
	1156, 1159, 1175, 1191, 1205, 1215, 1217, 1219, 
	1221, 1223, 1226, 1228, 1230, 1232, 1234, 1237, 
	1243, 1245, 1252, 1258, 1260, 1266, 1277, 1289, 
	1301, 1303, 1305, 1307, 1309, 1312, 1315, 1318, 
	1321, 1324, 1327, 1330, 1333, 1336, 1341, 1351, 
	1353, 1361, 1367, 1377, 1379, 1384, 1402, 1404, 
	1413, 1423, 1429, 1431, 1433, 1435, 1437, 1440, 
	1442, 1449, 1456, 1458, 1460, 1462, 1464, 1467, 
	1470, 1473, 1476, 1479, 1482, 1485, 1490, 1493, 
	1496, 1499, 1502, 1505, 1508, 1515, 1521, 1523, 
	1532, 1538, 1540, 1548, 1561, 1575, 1589, 1591, 
	1593, 1595, 1597, 1600, 1616, 1630, 1651, 1653, 
	1655, 1657, 1659, 1662, 1678, 1694, 1710, 1726, 
	1742, 1758, 1772, 1788, 1804, 1820, 1836, 1852, 
	1866, 1883, 1885, 1887, 1889, 1891, 1894, 1910, 
	1926, 1942, 1956, 1968, 1970, 1972, 1974, 1976, 
	1979, 1982, 1987, 1994, 1996, 1998, 2000, 2002, 
	2005, 2008, 2011, 2014, 2017, 2020, 2036, 2052, 
	2066, 2085, 2087, 2089, 2091, 2093, 2096, 2112, 
	2128, 2142, 2152, 2154, 2156, 2158, 2160, 2163, 
	2165, 2167, 2169, 2171, 2174, 2176, 2178, 2184, 
	2186, 2194, 2200, 2202, 2209, 2211, 2213, 2216, 
	2228, 2241, 2254, 2256, 2258, 2260, 2262, 2265, 
	2270, 2273, 2276, 2279, 2284, 2297, 2299, 2301, 
	2303, 2305, 2308, 2311, 2314, 2317, 2320, 2323, 
	2326, 2329, 2332, 2335, 2338, 2341, 2346, 2357, 
	2359, 2361, 2363, 2365, 2368, 2373, 2376, 2381, 
	2398, 2400, 2402, 2404, 2406, 2409, 2412, 2415, 
	2418, 2421, 2424, 2429, 2442, 2444, 2446, 2448, 
	2450, 2453, 2456, 2459, 2462, 2465, 2468, 2473, 
	2476, 2479, 2482, 2485, 2488, 2491, 2494, 2497, 
	2500, 2503, 2506, 2511, 2530, 2532, 2534, 2536, 
	2538, 2541, 2544, 2545, 2552
]

class << self
	attr_accessor :_subprog_trans_targs
	private :_subprog_trans_targs, :_subprog_trans_targs=
end
self._subprog_trans_targs = [
	2, 391, 402, 420, 446, 237, 441, 2, 
	391, 402, 420, 446, 237, 441, 0, 3, 
	3, 0, 4, 4, 0, 5, 5, 0, 
	6, 6, 0, 7, 7, 0, 8, 8, 
	0, 9, 9, 0, 10, 10, 0, 11, 
	11, 0, 12, 12, 0, 13, 14, 16, 
	13, 0, 13, 14, 16, 19, 237, 19, 
	237, 13, 0, 15, 0, 13, 15, 17, 
	0, 18, 17, 18, 13, 17, 20, 20, 
	0, 21, 21, 0, 22, 22, 0, 23, 
	23, 0, 24, 24, 0, 25, 25, 0, 
	26, 26, 0, 27, 232, 234, 27, 0, 
	27, 28, 232, 234, 231, 27, 231, 231, 
	231, 0, 29, 28, 30, 31, 218, 223, 
	220, 30, 0, 30, 31, 218, 220, 45, 
	45, 30, 0, 31, 32, 213, 215, 212, 
	31, 212, 212, 212, 0, 33, 32, 34, 
	145, 147, 34, 0, 34, 35, 145, 147, 
	150, 165, 209, 177, 144, 150, 165, 209, 
	177, 34, 144, 144, 144, 0, 36, 35, 
	37, 128, 38, 31, 109, 136, 111, 37, 
	0, 37, 38, 31, 109, 111, 114, 122, 
	122, 37, 0, 39, 40, 42, 39, 0, 
	39, 40, 42, 45, 45, 39, 0, 41, 
	0, 39, 41, 43, 0, 44, 43, 44, 
	39, 43, 46, 46, 0, 47, 47, 0, 
	48, 48, 0, 49, 49, 0, 50, 50, 
	0, 51, 76, 78, 51, 0, 51, 52, 
	76, 78, 81, 75, 81, 51, 75, 75, 
	75, 0, 53, 52, 466, 54, 62, 67, 
	64, 466, 466, 0, 55, 58, 55, 58, 
	0, 56, 56, 0, 57, 57, 0, 58, 
	58, 0, 59, 59, 0, 60, 60, 0, 
	61, 61, 0, 466, 62, 64, 466, 466, 
	0, 63, 0, 466, 63, 65, 0, 66, 
	65, 66, 466, 65, 68, 74, 74, 74, 
	74, 0, 69, 68, 466, 54, 62, 70, 
	64, 466, 466, 0, 71, 73, 73, 73, 
	73, 0, 72, 71, 466, 54, 62, 64, 
	466, 466, 0, 466, 54, 62, 64, 466, 
	73, 466, 73, 73, 73, 73, 0, 466, 
	54, 62, 70, 64, 466, 74, 466, 74, 
	74, 74, 74, 0, 466, 54, 62, 67, 
	64, 466, 75, 466, 75, 75, 75, 75, 
	0, 77, 0, 51, 77, 79, 0, 80, 
	79, 80, 51, 79, 466, 54, 62, 67, 
	64, 466, 82, 75, 82, 466, 75, 75, 
	75, 75, 0, 466, 54, 62, 67, 64, 
	466, 83, 75, 83, 466, 75, 75, 75, 
	75, 0, 466, 54, 62, 67, 64, 466, 
	84, 75, 84, 466, 75, 75, 75, 75, 
	0, 467, 54, 104, 67, 106, 466, 75, 
	467, 75, 75, 75, 75, 0, 85, 86, 
	88, 91, 91, 85, 0, 87, 0, 85, 
	87, 89, 0, 90, 89, 90, 85, 89, 
	92, 92, 0, 93, 94, 96, 93, 0, 
	93, 94, 96, 99, 99, 93, 0, 95, 
	0, 93, 95, 97, 0, 98, 97, 98, 
	93, 97, 100, 100, 0, 101, 101, 0, 
	102, 102, 0, 103, 103, 0, 61, 61, 
	0, 105, 0, 467, 105, 107, 0, 108, 
	107, 108, 467, 107, 110, 0, 37, 110, 
	112, 0, 113, 112, 113, 37, 112, 115, 
	0, 116, 38, 31, 117, 119, 116, 0, 
	116, 38, 31, 117, 119, 116, 0, 118, 
	0, 116, 118, 120, 0, 121, 120, 121, 
	116, 120, 123, 123, 0, 124, 124, 0, 
	125, 125, 0, 126, 126, 0, 127, 127, 
	0, 115, 115, 0, 129, 132, 129, 132, 
	0, 130, 130, 0, 131, 131, 0, 132, 
	132, 0, 133, 133, 0, 134, 134, 0, 
	135, 135, 0, 37, 38, 31, 109, 111, 
	37, 0, 137, 143, 143, 143, 143, 0, 
	138, 137, 37, 128, 38, 31, 109, 139, 
	111, 37, 0, 140, 142, 142, 142, 142, 
	0, 141, 140, 37, 128, 38, 31, 109, 
	111, 37, 0, 37, 128, 38, 31, 109, 
	111, 142, 37, 142, 142, 142, 142, 0, 
	37, 128, 38, 31, 109, 139, 111, 143, 
	37, 143, 143, 143, 143, 0, 37, 128, 
	38, 31, 109, 136, 111, 144, 37, 144, 
	144, 144, 144, 0, 146, 0, 34, 146, 
	148, 0, 149, 148, 149, 34, 148, 37, 
	128, 38, 31, 109, 136, 111, 151, 144, 
	151, 37, 144, 144, 144, 144, 0, 152, 
	128, 38, 31, 153, 136, 155, 144, 152, 
	144, 144, 144, 144, 0, 152, 35, 38, 
	31, 153, 155, 114, 158, 165, 200, 177, 
	144, 158, 165, 200, 177, 152, 144, 144, 
	144, 0, 154, 0, 152, 154, 156, 0, 
	157, 156, 157, 152, 156, 37, 128, 38, 
	31, 109, 136, 111, 159, 144, 159, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 160, 144, 160, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 161, 144, 161, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 162, 144, 162, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 163, 144, 163, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 164, 144, 164, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 144, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 166, 144, 166, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 167, 144, 167, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 168, 144, 168, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 169, 144, 169, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 170, 144, 170, 37, 144, 144, 
	144, 144, 0, 171, 128, 38, 31, 172, 
	136, 174, 144, 171, 144, 144, 144, 144, 
	0, 171, 35, 38, 31, 172, 174, 114, 
	158, 177, 144, 158, 177, 171, 144, 144, 
	144, 0, 173, 0, 171, 173, 175, 0, 
	176, 175, 176, 171, 175, 37, 128, 38, 
	31, 109, 136, 111, 178, 144, 178, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 179, 144, 179, 37, 
	144, 144, 144, 144, 0, 37, 128, 38, 
	31, 109, 136, 111, 180, 144, 180, 37, 
	144, 144, 144, 144, 0, 181, 128, 38, 
	31, 182, 136, 184, 144, 181, 144, 144, 
	144, 144, 0, 181, 38, 31, 182, 184, 
	114, 187, 122, 187, 122, 181, 0, 183, 
	0, 181, 183, 185, 0, 186, 185, 186, 
	181, 185, 188, 188, 0, 189, 190, 192, 
	189, 0, 189, 190, 192, 195, 195, 189, 
	0, 191, 0, 189, 191, 193, 0, 194, 
	193, 194, 189, 193, 196, 196, 0, 197, 
	197, 0, 198, 198, 0, 199, 199, 0, 
	135, 135, 0, 37, 128, 38, 31, 109, 
	136, 111, 201, 144, 201, 37, 144, 144, 
	144, 144, 0, 37, 128, 38, 31, 109, 
	136, 111, 202, 144, 202, 37, 144, 144, 
	144, 144, 0, 203, 128, 38, 31, 204, 
	136, 206, 144, 203, 144, 144, 144, 144, 
	0, 203, 35, 38, 31, 204, 206, 114, 
	158, 165, 177, 144, 158, 165, 177, 203, 
	144, 144, 144, 0, 205, 0, 203, 205, 
	207, 0, 208, 207, 208, 203, 207, 37, 
	128, 38, 31, 109, 136, 111, 210, 144, 
	210, 37, 144, 144, 144, 144, 0, 37, 
	128, 38, 31, 109, 136, 111, 211, 144, 
	211, 37, 144, 144, 144, 144, 0, 203, 
	128, 38, 31, 204, 136, 206, 144, 203, 
	144, 144, 144, 144, 0, 34, 145, 147, 
	212, 34, 212, 212, 212, 212, 0, 214, 
	0, 31, 214, 216, 0, 217, 216, 217, 
	31, 216, 219, 0, 30, 219, 221, 0, 
	222, 221, 222, 30, 221, 224, 230, 230, 
	230, 230, 0, 225, 224, 30, 31, 218, 
	226, 220, 30, 0, 227, 229, 229, 229, 
	229, 0, 228, 227, 30, 31, 218, 220, 
	30, 0, 30, 31, 218, 220, 229, 30, 
	229, 229, 229, 229, 0, 30, 31, 218, 
	226, 220, 230, 30, 230, 230, 230, 230, 
	0, 30, 31, 218, 223, 220, 231, 30, 
	231, 231, 231, 231, 0, 233, 0, 27, 
	233, 235, 0, 236, 235, 236, 27, 235, 
	238, 238, 0, 239, 239, 0, 240, 240, 
	0, 241, 241, 0, 242, 242, 0, 243, 
	243, 0, 244, 244, 0, 245, 245, 0, 
	246, 386, 388, 246, 0, 246, 247, 386, 
	388, 385, 246, 385, 385, 385, 0, 248, 
	247, 468, 250, 372, 374, 380, 466, 468, 
	0, 249, 250, 367, 369, 249, 0, 250, 
	251, 362, 364, 361, 250, 361, 361, 361, 
	0, 252, 251, 253, 294, 296, 253, 0, 
	253, 254, 294, 296, 299, 314, 358, 326, 
	293, 299, 314, 358, 326, 253, 293, 293, 
	293, 0, 255, 254, 256, 277, 257, 250, 
	258, 285, 260, 256, 0, 256, 257, 250, 
	258, 260, 263, 271, 271, 256, 0, 466, 
	62, 64, 466, 466, 0, 259, 0, 256, 
	259, 261, 0, 262, 261, 262, 256, 261, 
	264, 0, 265, 257, 250, 266, 268, 265, 
	0, 265, 257, 250, 266, 268, 265, 0, 
	267, 0, 265, 267, 269, 0, 270, 269, 
	270, 265, 269, 272, 272, 0, 273, 273, 
	0, 274, 274, 0, 275, 275, 0, 276, 
	276, 0, 264, 264, 0, 278, 281, 278, 
	281, 0, 279, 279, 0, 280, 280, 0, 
	281, 281, 0, 282, 282, 0, 283, 283, 
	0, 284, 284, 0, 256, 257, 250, 258, 
	260, 256, 0, 286, 292, 292, 292, 292, 
	0, 287, 286, 256, 277, 257, 250, 258, 
	288, 260, 256, 0, 289, 291, 291, 291, 
	291, 0, 290, 289, 256, 277, 257, 250, 
	258, 260, 256, 0, 256, 277, 257, 250, 
	258, 260, 291, 256, 291, 291, 291, 291, 
	0, 256, 277, 257, 250, 258, 288, 260, 
	292, 256, 292, 292, 292, 292, 0, 256, 
	277, 257, 250, 258, 285, 260, 293, 256, 
	293, 293, 293, 293, 0, 295, 0, 253, 
	295, 297, 0, 298, 297, 298, 253, 297, 
	256, 277, 257, 250, 258, 285, 260, 300, 
	293, 300, 256, 293, 293, 293, 293, 0, 
	301, 277, 257, 250, 302, 285, 304, 293, 
	301, 293, 293, 293, 293, 0, 301, 254, 
	257, 250, 302, 304, 263, 307, 314, 349, 
	326, 293, 307, 314, 349, 326, 301, 293, 
	293, 293, 0, 303, 0, 301, 303, 305, 
	0, 306, 305, 306, 301, 305, 256, 277, 
	257, 250, 258, 285, 260, 308, 293, 308, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 309, 293, 309, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 310, 293, 310, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 311, 293, 311, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 312, 293, 312, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 313, 293, 313, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 293, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 315, 293, 315, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 316, 293, 316, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 317, 293, 317, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 318, 293, 318, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 319, 293, 319, 256, 293, 
	293, 293, 293, 0, 320, 277, 257, 250, 
	321, 285, 323, 293, 320, 293, 293, 293, 
	293, 0, 320, 254, 257, 250, 321, 323, 
	263, 307, 326, 293, 307, 326, 320, 293, 
	293, 293, 0, 322, 0, 320, 322, 324, 
	0, 325, 324, 325, 320, 324, 256, 277, 
	257, 250, 258, 285, 260, 327, 293, 327, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 328, 293, 328, 
	256, 293, 293, 293, 293, 0, 256, 277, 
	257, 250, 258, 285, 260, 329, 293, 329, 
	256, 293, 293, 293, 293, 0, 330, 277, 
	257, 250, 331, 285, 333, 293, 330, 293, 
	293, 293, 293, 0, 330, 257, 250, 331, 
	333, 263, 336, 271, 336, 271, 330, 0, 
	332, 0, 330, 332, 334, 0, 335, 334, 
	335, 330, 334, 337, 337, 0, 338, 339, 
	341, 338, 0, 338, 339, 341, 344, 344, 
	338, 0, 340, 0, 338, 340, 342, 0, 
	343, 342, 343, 338, 342, 345, 345, 0, 
	346, 346, 0, 347, 347, 0, 348, 348, 
	0, 284, 284, 0, 256, 277, 257, 250, 
	258, 285, 260, 350, 293, 350, 256, 293, 
	293, 293, 293, 0, 256, 277, 257, 250, 
	258, 285, 260, 351, 293, 351, 256, 293, 
	293, 293, 293, 0, 352, 277, 257, 250, 
	353, 285, 355, 293, 352, 293, 293, 293, 
	293, 0, 352, 254, 257, 250, 353, 355, 
	263, 307, 314, 326, 293, 307, 314, 326, 
	352, 293, 293, 293, 0, 354, 0, 352, 
	354, 356, 0, 357, 356, 357, 352, 356, 
	256, 277, 257, 250, 258, 285, 260, 359, 
	293, 359, 256, 293, 293, 293, 293, 0, 
	256, 277, 257, 250, 258, 285, 260, 360, 
	293, 360, 256, 293, 293, 293, 293, 0, 
	352, 277, 257, 250, 353, 285, 355, 293, 
	352, 293, 293, 293, 293, 0, 253, 294, 
	296, 361, 253, 361, 361, 361, 361, 0, 
	363, 0, 250, 363, 365, 0, 366, 365, 
	366, 250, 365, 368, 0, 249, 368, 370, 
	0, 371, 370, 371, 249, 370, 373, 0, 
	468, 373, 375, 384, 384, 384, 384, 0, 
	376, 375, 468, 250, 372, 377, 380, 466, 
	468, 0, 378, 383, 383, 383, 383, 0, 
	379, 378, 468, 250, 372, 380, 466, 468, 
	0, 381, 0, 382, 381, 382, 468, 381, 
	468, 250, 372, 380, 466, 383, 468, 383, 
	383, 383, 383, 0, 468, 250, 372, 377, 
	380, 466, 384, 468, 384, 384, 384, 384, 
	0, 468, 250, 372, 374, 380, 466, 385, 
	468, 385, 385, 385, 385, 0, 387, 0, 
	246, 387, 389, 0, 390, 389, 390, 246, 
	389, 392, 20, 392, 20, 0, 393, 393, 
	0, 394, 394, 0, 395, 395, 0, 396, 
	397, 399, 396, 0, 396, 397, 399, 2, 
	19, 402, 237, 2, 19, 402, 237, 396, 
	0, 398, 0, 396, 398, 400, 0, 401, 
	400, 401, 396, 400, 403, 403, 0, 404, 
	404, 0, 405, 405, 0, 406, 406, 0, 
	407, 407, 0, 408, 408, 0, 409, 409, 
	0, 410, 410, 0, 411, 411, 0, 412, 
	412, 0, 413, 413, 0, 414, 415, 417, 
	414, 0, 414, 415, 417, 2, 19, 237, 
	2, 19, 237, 414, 0, 416, 0, 414, 
	416, 418, 0, 419, 418, 419, 414, 418, 
	421, 430, 421, 430, 0, 422, 422, 0, 
	423, 424, 426, 423, 0, 423, 424, 426, 
	2, 391, 402, 429, 237, 441, 2, 391, 
	402, 429, 237, 441, 423, 0, 425, 0, 
	423, 425, 427, 0, 428, 427, 428, 423, 
	427, 430, 430, 0, 431, 431, 0, 432, 
	432, 0, 433, 433, 0, 434, 434, 0, 
	435, 436, 438, 435, 0, 435, 436, 438, 
	2, 391, 402, 237, 2, 391, 402, 237, 
	435, 0, 437, 0, 435, 437, 439, 0, 
	440, 439, 440, 435, 439, 442, 442, 0, 
	443, 443, 0, 444, 444, 0, 445, 445, 
	0, 434, 434, 0, 447, 450, 447, 450, 
	0, 448, 448, 0, 449, 449, 0, 422, 
	422, 0, 451, 451, 0, 452, 452, 0, 
	453, 453, 0, 454, 454, 0, 455, 455, 
	0, 456, 456, 0, 457, 457, 0, 458, 
	458, 0, 459, 460, 462, 459, 0, 459, 
	460, 462, 2, 391, 402, 420, 465, 237, 
	441, 2, 391, 402, 420, 465, 237, 441, 
	459, 0, 461, 0, 459, 461, 463, 0, 
	464, 463, 464, 459, 463, 447, 447, 0, 
	0, 85, 86, 88, 91, 91, 85, 0, 
	249, 250, 367, 369, 249, 0, 0
]

class << self
	attr_accessor :_subprog_trans_actions
	private :_subprog_trans_actions, :_subprog_trans_actions=
end
self._subprog_trans_actions = [
	0, 25, 0, 0, 0, 21, 0, 0, 
	25, 0, 0, 0, 21, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 25, 21, 25, 
	21, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 27, 27, 27, 27, 0, 
	0, 17, 0, 0, 17, 0, 17, 17, 
	17, 0, 0, 0, 19, 19, 19, 0, 
	19, 19, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 9, 0, 0, 9, 
	0, 9, 9, 9, 0, 0, 0, 11, 
	11, 11, 11, 0, 0, 13, 0, 0, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 0, 13, 13, 13, 0, 0, 0, 
	15, 0, 15, 15, 15, 0, 15, 15, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 5, 
	0, 0, 5, 5, 5, 0, 5, 5, 
	5, 0, 0, 0, 7, 0, 7, 0, 
	7, 7, 7, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 7, 7, 7, 7, 7, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 7, 0, 7, 0, 
	7, 7, 7, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 7, 0, 7, 7, 
	7, 7, 0, 7, 0, 7, 7, 7, 
	0, 7, 0, 0, 0, 0, 0, 7, 
	0, 7, 0, 7, 7, 0, 7, 0, 
	0, 0, 0, 0, 7, 0, 7, 0, 
	7, 7, 0, 7, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 7, 0, 7, 0, 
	7, 7, 0, 0, 0, 7, 0, 0, 
	0, 0, 0, 7, 0, 7, 0, 7, 
	7, 0, 0, 0, 7, 0, 0, 0, 
	0, 0, 7, 0, 7, 0, 7, 7, 
	0, 0, 0, 7, 0, 0, 0, 0, 
	0, 7, 0, 7, 0, 7, 7, 0, 
	7, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 1, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 15, 15, 15, 15, 15, 
	15, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 15, 0, 15, 15, 15, 0, 
	15, 15, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	15, 15, 0, 15, 0, 15, 15, 15, 
	15, 0, 15, 0, 0, 0, 0, 0, 
	15, 0, 15, 15, 15, 0, 15, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 15, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 15, 
	0, 15, 15, 15, 0, 15, 0, 0, 
	0, 15, 0, 0, 0, 0, 0, 32, 
	0, 15, 15, 32, 0, 32, 0, 32, 
	0, 0, 0, 0, 0, 0, 13, 0, 
	0, 0, 0, 0, 13, 13, 13, 13, 
	13, 13, 13, 13, 13, 0, 13, 13, 
	13, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 38, 0, 38, 
	38, 38, 0, 38, 0, 38, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 15, 0, 0, 0, 0, 
	0, 0, 13, 0, 0, 0, 0, 0, 
	13, 13, 13, 13, 13, 0, 13, 13, 
	13, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 0, 0, 15, 
	0, 0, 0, 0, 0, 15, 0, 15, 
	15, 15, 0, 15, 0, 15, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 0, 0, 0, 15, 0, 0, 
	0, 0, 0, 29, 0, 15, 15, 29, 
	0, 29, 0, 29, 0, 0, 0, 0, 
	0, 0, 13, 0, 0, 0, 0, 0, 
	13, 13, 13, 13, 13, 13, 13, 0, 
	13, 13, 13, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 15, 
	0, 15, 15, 15, 0, 15, 0, 0, 
	0, 15, 0, 0, 0, 0, 0, 15, 
	0, 15, 15, 15, 0, 15, 0, 0, 
	0, 15, 0, 0, 0, 0, 0, 35, 
	0, 15, 15, 35, 0, 35, 0, 35, 
	0, 0, 0, 0, 0, 11, 11, 11, 
	0, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 19, 19, 19, 
	0, 19, 19, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 19, 19, 19, 19, 
	19, 0, 19, 19, 19, 19, 0, 19, 
	0, 0, 0, 0, 0, 19, 19, 19, 
	0, 19, 0, 19, 0, 0, 0, 0, 
	0, 19, 19, 19, 0, 19, 0, 19, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	23, 23, 23, 23, 0, 0, 17, 0, 
	0, 17, 0, 17, 17, 17, 0, 0, 
	0, 19, 19, 19, 0, 19, 19, 19, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	9, 0, 0, 9, 0, 9, 9, 9, 
	0, 0, 0, 11, 11, 11, 11, 0, 
	0, 13, 0, 0, 13, 13, 13, 13, 
	13, 13, 13, 13, 13, 0, 13, 13, 
	13, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 15, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 15, 15, 15, 15, 
	15, 15, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 15, 0, 15, 15, 15, 
	0, 15, 15, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 15, 15, 0, 15, 0, 15, 15, 
	15, 15, 0, 15, 0, 0, 0, 0, 
	0, 15, 0, 15, 15, 15, 0, 15, 
	0, 15, 0, 0, 0, 0, 0, 15, 
	0, 15, 15, 15, 0, 15, 0, 15, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	15, 0, 15, 15, 15, 0, 15, 0, 
	0, 0, 15, 0, 0, 0, 0, 0, 
	32, 0, 15, 15, 32, 0, 32, 0, 
	32, 0, 0, 0, 0, 0, 0, 13, 
	0, 0, 0, 0, 0, 13, 13, 13, 
	13, 13, 13, 13, 13, 13, 0, 13, 
	13, 13, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 38, 0, 
	38, 38, 38, 0, 38, 0, 38, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 15, 0, 0, 0, 
	0, 0, 0, 13, 0, 0, 0, 0, 
	0, 13, 13, 13, 13, 13, 0, 13, 
	13, 13, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 0, 0, 
	15, 0, 0, 0, 0, 0, 15, 0, 
	15, 15, 15, 0, 15, 0, 15, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 15, 0, 15, 15, 
	15, 0, 15, 0, 0, 0, 15, 0, 
	0, 0, 0, 0, 29, 0, 15, 15, 
	29, 0, 29, 0, 29, 0, 0, 0, 
	0, 0, 0, 13, 0, 0, 0, 0, 
	0, 13, 13, 13, 13, 13, 13, 13, 
	0, 13, 13, 13, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	15, 0, 15, 15, 15, 0, 15, 0, 
	0, 0, 15, 0, 0, 0, 0, 0, 
	15, 0, 15, 15, 15, 0, 15, 0, 
	0, 0, 15, 0, 0, 0, 0, 0, 
	35, 0, 15, 15, 35, 0, 35, 0, 
	35, 0, 0, 0, 0, 0, 11, 11, 
	11, 0, 11, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 19, 19, 19, 0, 19, 19, 
	19, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 19, 19, 19, 19, 19, 19, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	19, 19, 19, 19, 19, 0, 19, 0, 
	0, 0, 0, 0, 19, 19, 19, 0, 
	19, 19, 0, 19, 0, 0, 0, 0, 
	0, 19, 19, 19, 0, 19, 19, 0, 
	19, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	25, 0, 21, 0, 25, 0, 21, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 25, 21, 
	0, 25, 21, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 25, 0, 0, 21, 0, 0, 25, 
	0, 0, 21, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 25, 0, 21, 0, 25, 0, 21, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 25, 0, 0, 0, 21, 
	0, 0, 25, 0, 0, 0, 21, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 0, 0, 0, 0, 0, 0, 3, 
	0, 0, 0, 0, 0, 3, 0
]

class << self
	attr_accessor :subprog_start
end
self.subprog_start = 1;
class << self
	attr_accessor :subprog_first_final
end
self.subprog_first_final = 466;
class << self
	attr_accessor :subprog_error
end
self.subprog_error = 0;

class << self
	attr_accessor :subprog_en_signature
end
self.subprog_en_signature = 1;


# line 78 "lib/vorax/parser/grammars/subprog.rl"
					
# line 1305 "lib/vorax/parser/grammars/subprog.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = subprog_start
end

# line 79 "lib/vorax/parser/grammars/subprog.rl"
					
# line 1314 "lib/vorax/parser/grammars/subprog.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _subprog_key_offsets[cs]
	_trans = _subprog_index_offsets[cs]
	_klen = _subprog_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _subprog_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _subprog_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _subprog_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _subprog_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _subprog_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _subprog_trans_targs[_trans]
	if _subprog_trans_actions[_trans] != 0
		_acts = _subprog_trans_actions[_trans]
		_nacts = _subprog_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _subprog_actions[_acts - 1]
when 0 then
# line 7 "lib/vorax/parser/grammars/subprog.rl"
		begin

  rest = data[(p..data.length)]
  pos = Parser.next_argument(rest) - 1
	@args.last && @args.last.has_default = true
	p = p + pos - 1 if pos > 0
		end
when 1 then
# line 14 "lib/vorax/parser/grammars/subprog.rl"
		begin

	text = data[p..eof]
	pos = 0
	walker = PlsqlWalker.new(text)
	walker.register_spot(/(\bAS\b)|(\bIS\b)|;/i) do |scanner|
		pos = scanner.pos
		p = p + pos - 1
		@declare_start_pos = p + 1
	  scanner.terminate
	end
	walker.walk
		end
when 2 then
# line 31 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 3 then
# line 31 "lib/vorax/parser/grammars/subprog.rl"
		begin
@return_type = data[@start...p]		end
when 4 then
# line 33 "lib/vorax/parser/grammars/subprog.rl"
		begin
 @args.last && @args.last.direction=:inout		end
when 5 then
# line 35 "lib/vorax/parser/grammars/subprog.rl"
		begin
@args.last && @args.last.direction = :in		end
when 6 then
# line 37 "lib/vorax/parser/grammars/subprog.rl"
		begin
@args.last && @args.last.direction = :out		end
when 7 then
# line 42 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 8 then
# line 42 "lib/vorax/parser/grammars/subprog.rl"
		begin
@args << ArgumentItem.new(@start, data[@start...p])		end
when 9 then
# line 44 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 10 then
# line 44 "lib/vorax/parser/grammars/subprog.rl"
		begin
@args.last && @args.last.data_type = data[@start...p]		end
when 11 then
# line 51 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 12 then
# line 51 "lib/vorax/parser/grammars/subprog.rl"
		begin
@name = data[@start...p]		end
when 13 then
# line 57 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 14 then
# line 57 "lib/vorax/parser/grammars/subprog.rl"
		begin
@kind = data[@start...p]		end
when 15 then
# line 59 "lib/vorax/parser/grammars/subprog.rl"
		begin
@start = p		end
when 16 then
# line 59 "lib/vorax/parser/grammars/subprog.rl"
		begin
@kind = data[@start...p]		end
# line 1478 "lib/vorax/parser/grammars/subprog.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 80 "lib/vorax/parser/grammars/subprog.rl"
				  data.chop
				end
				{:name => @name, :kind => @kind, :args => @args, :return_type => @return_type, :declare_start_pos => @declare_start_pos}
			end

		end
	
	end

end
